}
vec
### a)
a<-c(4,−10,7,−2,8,−6,1,−15,3,−9)
i<-3
j<-5
b<-c(1,5,7)
c<-c(TRUE,TRUE,FALSE,TRUE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE)
### a)
a<-c(4,-10,7,-2,8,-6,1,-15,3,-9)
##### i)
a[]
##### ii)
a[i,j]
##### ii)
a[i,j]
##### iii)
a[seq(i,i,2)]
##### iv
a[seq(i,j,3)]
##### v
a[i:length(a)]
##### vi
a[c(1, 5, 7)]
##### vii
a[b]
##### vii
a[c]
##### ix
a[a==-4]
### b)
mi_matriz=matrix(1:25,nrow=5,ncol=5,byrow=TRUE)
View(mi_matriz)
mi_matriz
mi matriz[3, 2]
mi_matriz[3, 2]
mi matriz[3,]
mi_matriz[3,]
mi_matriz[,2]
##### iv
mi_matriz[seq(1,5,2),]
##### v
mi_matriz[,seq(2,5,2)]
##### vi
mi_matriz[seq(1,5,2),seq(1,5,2)]
##### vii
mi matriz[10]
##### vii
mi_matriz[10]
##### viii
mi_matriz[b]
### a)
A=matrix(1:9,ncol=3,nrow=3)
A
B=matrix(2:10,ncol=3,nrow=3)
B
A*B
A%*%B
### a)
A=matrix(1:4,ncol=2,nrow=2)
B=matrix(2:5,ncol=2,nrow=2)
M=matrix(NA,nrow(A),ncol(B))
for (i in 1:nrow(A)) {
for (i in 1:ncol(B)) {
M[i,l]=sum(A[i,1:ncol(A)]*B[1:nrow(B),l])
}
}
for (i in 1:nrow(A)) {
for (l in 1:ncol(B)) {
M[i,l]=sum(A[i,1:ncol(A)]*B[1:nrow(B),l])
}
}
print(M)
A%*%B #La funcion %*%" hace el producto matricial como lo conocemos
M1=A%*%B #La funcion %*%" hace el producto matricial como lo conocemos
print(A%*%B)
M==A%*%B #La funcion %*%" hace el producto matricial como lo conocemos
### b)
rm(list=ls())
A=matrix(3:6,ncol=2,nrow=2)
B=matrix(4:7,ncol=2,nrow=2)
AxB=matrix(0,nrow(A),ncol(A))
for (i in 1:nrow(A)) {
for (j in 1:ncol(A)) {
AxB[i,j]=A[i,j]*B[i,j]
}
}
print(AxB)
print(A*B) #La funcion "*" hace el producto componente a componente
AxB==A*B
### c)
rm(list=ls())
A=matrix(1:1000,100,100)
B=matrix(1:1000,100,100)
M=matrix(NA,nrow(A),ncol(B))
for (i in 1:nrow(A)) {
for (l in 1:ncol(B)) {
M[i,l]=sum(A[i,1:ncol(A)]*B[1:nrow(B),l])
}
}
M
print(A%*%B)
M==A%*%B
### c)
rm(list=ls())
A=matrix(1:1000,100,100)
B=matrix(1:1000,100,100)
M=matrix(NA,nrow(A),ncol(B))
for (i in 1:nrow(A)) {
for (l in 1:ncol(B)) {
M[i,l]=sum(A[i,1:ncol(A)]*B[1:nrow(B),l])
}
}
print(M)
print(A%*%B)
M==A%*%B
### c)
rm(list=ls())
rm(list=ls())
A=matrix(1:1000,100,100)
B=matrix(1:1000,100,100)
AxB=matrix(0,nrow(A),ncol(A))
for (i in 1:nrow(A)) {
for (j in 1:ncol(A)) {
AxB[i,j]=A[i,j]*B[i,j]
}
}
print(AxB)
print(A*B)
AxB==A*B
### b)
rm(list = ls())
x=matrix(1:600,nrow=30,ncol=20)
for (i in 1:30) {
for (j in 1:20) {
x[i,j]=i*j
}
}
print(x)
print(x)
A=matrix(1,30,30)
A
A=matrix(1,30,20)
A
x=matrix(1:600,nrow=30,ncol=20)
for (i in 1:30) {
for (j in 1:20) {
x[i,j]=i*j
}
}
print(x)
### c)
rm(list = ls())
### b)
rm(list = ls())
x=matrix(1:600,nrow=30,ncol=20)
for (i in 1:30) {
for (j in 1:20) {
x[i,j]=i*j
}
}
print(x)
### c)
A=matrix(1:30,30,20)
B=matrix(1:20,30,20,byrow=TRUE)
C=A*B
print(C)
verificacion=(C==x)
print(verificacion)
### c)
A=matrix(1:30,30,20)
B=matrix(1:20,30,20,byrow=TRUE)
C=A*B
print(C)
verificacion=(C==x)
print(verificacion)
verificacion=(C==x)
verificacion=(C==x)
x=matrix(1:600,nrow=30,ncol=20)
for (i in 1:30) {
for (j in 1:20) {
x[i,j]=i*j
}
}
print(x)
verificacion=(C==x)
print(verificacion)
D=matrix(1:20,30,20,byrow=TRUE)
### d)
B=C[,5]
B
C
y=matrix(1:600,20,30,10)
y
View(y)
### d)
B=c(C[,5])
B
### e)
rm(list = ls())
y=array(NA,dim=c(20,30,10))
for (i in 1:20) {
for (j in 1:30) {
for (k in 1:10) {
y[i,j,k]=i*j*k
}
}
}
print(y)
h=apply(y,c(3))
z=array(y,dim=c(20,30,1),k=4)
z=array(y,dim=c(20,30,1),k==4)
z=apply(y,c(3))
z=apply(y,c(,,4))
z=y[,,4]
z
View(z)
z=array(y[,,4])
print(z)
z=y[,,4]
print(z)
### a)
rm(list=ls())
A=matrix(NA,2,2)
for(i in 1:4){
A[i]=as.numeric(readline("Ingrese los valores de A, se completa por fila: "))
}
A
### a)
rm(list=ls())
A=matrix(NA,2,2)
for(i in 1:4){
A[i]=as.numeric(readline("Ingrese los valores de A, se completa por columna: "))
}
A
inversa_A=(1/det(A))*matrix(c(A[4],-A[2],-A[3],A[1]),2,2)
inversa_A
A[2]
### a)
rm(list=ls())
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
x
X
source("~/.active-rstudio-document", echo=TRUE)
View(A)
View(B)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
X=solve(A,B)
source("~/.active-rstudio-document", echo=TRUE)
X
### b)
rm(list=ls())
### a)
temp=c()
for (i in 1:8) {
readline(paste0("Ingrese el ",i," valor de temperatura: "))
temp[i]=i
}
23
source("~/.active-rstudio-document", echo=TRUE)
1
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
hora=which(temp[i]==max)
### a)
rm(list=ls())
temp=c()
for (i in 1:8) {
temp[i]=readline(paste0("Ingrese el ",i," valor de temperatura: "))
hora=which(temp[i]==max)
}
### a)
rm(list=ls())
temp=c()
for (i in 1:8) {
temp[i]=readline(paste0("Ingrese el ",i," valor de temperatura: "))
hora=which(temp[i]=max)
### a)
rm(list=ls())
temp=c()
for (i in 1:8) {
temp[i]=readline(paste0("Ingrese el ",i," valor de temperatura: "))
}
hora=which(max(temp))
hora=max(temp)
### a)
rm(list=ls())
temp=c()
for (i in 1:8) {
temp[i]=readline(paste0("Ingrese el ",i," valor de temperatura: "))
if(i==1){
max=max(temp)
}else if (temp[i]>max){
max=max(temp)
}
}
hora=which(temp==max)
temp=c()
for (i in 1:8) {
temp[i]=readline(paste0("Ingrese el ",i," valor de temperatura: "))
if (i==1) {
max=temp[i]
} else if (temp[i]>max) {
max=temp[i]
}
}
hora=which(temp==max)
cat("El maximo valos de temperatura fue",max,"y ocurrio a las",(hora*3)-3,"hs.")
cat("El maximo valor de temperatura fue",max,"y ocurrio a las",(hora*3)-3,"hs.")
cat("El maximo valor de temperatura fue",max,"y ocurrio a las",(hora*3)-3,"hs.")
cat("El maximo valor de temperatura fue",max,"°C y ocurrio a las",(hora*3)-3,"hs.")
### b)
rm(list=ls())
### b)
rm(list=ls())
temp=c()
for (i in 1:8) {
temp[i]=readline(paste0("Ingrese el ",i," valor de temperatura: "))
}
tempmax=max(temp)
hora=which(temp==tempmax)
cat("El maximo valor de temperatura fue",max,"°C y ocurrio a las",(hora*3)-3,"hs.")
cat("El maximo valor de temperatura fue",tempmax,"°C y ocurrio a las",(hora*3)-3,"hs.")
### c)
rm(list=ls())
temp=c()
total=0
for (i in 1:8) {
temp[i]=readline(paste0("Ingrese el ",i," valor de temperatura: "))
total=total+temp
}
14
for (i in 1:8) {
temp[i]=readline(paste0("Ingrese el ",i," valor de temperatura: "))
total=total+temp
}
for (i in 1:8) {
temp[i]=readline(paste0("Ingrese el ",i," valor de temperatura: "))
total[i]=total+temp[i]
}
temp=c()
total=0
for (i in 1:8) {
temp[i]=readline(paste0("Ingrese el ",i," valor de temperatura: "))
total=total+temp
}
temp=c()
total=0
for (i in 1:8) {
temp[i]=readline(paste0("Ingrese el ",i," valor de temperatura: "))
total=total+temp[i]
}
total=total+temp[i]
+
0
### c)
rm(list=ls())
temp=c()
total=0
for (i in 1:8) {
temp[i]=readline(paste0("Ingrese el ",i," valor de temperatura: "))
total=total+temp[i]
}
12
### c)
rm(list=ls())
temp=c()
total=0
for (i in 1:8) {
temp[i]=as.numeric(readline(paste0("Ingrese el ",i," valor de temperatura: ")))
total=total+temp[i]
}
sum(temp)
### c)
rm(list=ls())
temp=c()
total=0
for (i in 1:8) {
temp[i]=as.numeric(readline(paste0("Ingrese el ",i," valor de temperatura: ")))
total=total+temp[i]
promedio=total/8
}
suma=sum(temp)
promedio1=mean(temp)
### d)
rm(list=ls())
temp=c()
for (i in 1:8) {
temp[i]=as.numeric(readline(paste0("Ingrese el ",i," valor de temperatura: ")))
}
total=sum(temp[temp>20])
suma_mas20=sum(temp[temp>20])
sumamas20=sum(temp[temp>20])
print(sumamas20)
sumamas20which=temp[which(temp>20)]
print(sum(sumamas20which))
### a)
rm(list=ls())
source("~/PracticasLabo/Practica_2/Parcialito_Luca_Focaia.R", echo=TRUE)
setwd("~/PracticasLabo/TP_Final")
#Leo el archivo ascii y cargo los datos
archivo <- "~/PracticasLabo/TP_Final/co2_daily_mlo.csv"
archivo1 <- "~/PracticasLabo/TP_Final/co2_mm_mlo.csv"
datos <- read.csv(archivo, skip = 32)
head(datos)
tail(datos) #Datos diarios desde Mayo de 1974 hasta Septiembre de 2023
#Le pongo nombre a las columnas del data frame
colnames(datos) = c("Anio","Mes","Dia","Dia_decimal","CO2_ppm")
datos1 <- read.csv(archivo1, skip = 40)
head(datos1)
tail(datos1) #Datos mensuales desde Marzo de 1958 hasta Septiembre de 2023
#Recorto mis datos
datos <- datos[datos$Anio %in% 1975:2022,]
datos1 <- datos1[datos1$year %in% 1975:2022,]
#Agrego en "datos" una columna con los datos desestacionalizados
anios <- c(1975:2022)
meses <- c(1:12)
Desestacionalizado = c()
for (i in 1:length(anios)) {
anio = anios[i]
datos_anio = datos[datos$Anio == anio,]
datos_anio1 = datos1[datos1$year == anio,]
for (j in 1:length(meses)) {
datos_mes = datos_anio[datos_anio$Mes == j,]
datos_mes1 = datos_anio1[datos_anio1$month == j,]
desestacionalizado_mes = seq(datos_mes1$deseasonalized,
datos_mes1$deseasonalized,
length.out = length(datos_mes$CO2_ppm))
Desestacionalizado = c(Desestacionalizado, desestacionalizado_mes)
}
} #Creo un vector con los datos desestacionalizados pero repetidos la cantidad
#Agrego a mis datos la columna con los datos desestacionalizados
datos = cbind(datos, Desestacionalizado)
#Calculo los promedios mensual y semanal
#PROMEDIO MENSUAL
media_mensual_xanio = c()
for (i in 1:length(anios)) {
for (j in 1:length(meses)) {
anio = anios[i]
datos_anio = datos[datos$Anio == anio,]
datos_mes = datos_anio[datos_anio$Mes == j,]
media_mes = round(mean(datos_mes$CO2_ppm, na.rm = T),2)
media_mensual_xanio = c(media_mensual_xanio, media_mes)
}
}
#PROMEDIO SEMANAL
media_semanal_xanio = c()
for (i in 1:length(anios)) {
for (j in 1:length(meses)) {
anio = anios[i]
datos_anio = datos[datos$Anio == anio,]
datos_mes = datos_anio[datos_anio$Mes == j,]
for (k in seq(1,31,8)) {
semana = datos_mes[datos_mes$Dia %in% k:(k+7),]
media_semanal = round(mean(semana$CO2_ppm, na.rm = T),2)
media_semanal_xanio = c(media_semanal_xanio, media_semanal)
}
}
}
576*4
#Armo el grafico pedido con ggplot
require(ggplot2)
grafico = ggplot(data = datos, mapping = aes(x = Anio, y = CO2_ppm)) +
geom_point()
grafico
rep(1:4, each = 2)
#Guardo los promedios en una tabla en formato ascii
#Creo distintos vectores para armar un data frame nuevo y luego guardarlo como
#tabla
Anios = rep(1975:2022, each = 4, length.out = 2304)
tail(Anios)
2034/4
2034/12
4*12
2034/12
2034/48
2034/49
2034/47
2034/46
4*12
#Guardo los promedios en una tabla en formato ascii
#Creo distintos vectores para armar un data frame nuevo y luego guardarlo como
#tabla
Anios = rep(1975:2022, each = 48, length.out = 2304)
Anios
#Guardo los promedios en una tabla en formato ascii
#Creo distintos vectores para armar un data frame nuevo y luego guardarlo como
#tabla
Anio = rep(1975:2022, each = 48, length.out = 2304)
rm(Anios)
#Guardo los promedios en una tabla en formato ascii
#Creo distintos vectores para armar un data frame nuevo y luego guardarlo como
#tabla
Anio = rep(1975:2022, each = 48)
#Guardo los promedios en una tabla en formato ascii
#Creo distintos vectores para armar un data frame nuevo y luego guardarlo como
#tabla
Anio = rep(1975:2022, each = 48)
rep(1:4, each = 2, length.out = 4)
Mes = rep(1:12, each = 4)
2022-1975
Mes = rep(1:12, each = 4, times = 48)
Semana = rep(1:4, times = 48)
Semana = rep(1:4, times = 2034)
2034/4
Semana = rep(1:4, times = 508)
Semana = rep(1:4, times = 509)
Semana = rep(1:4, times = 508.5)
